/*
 * Keepa API
 * The Keepa API offers numerous endpoints.  Every request requires your API access key as a parameter. You can find and change your key in the keepa portal. All requests must be issued as a HTTPS GET and accept gzip encoding. If possible, use a Keep-Alive connection.  Multiple requests can be made in parallel to increase throughput.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@keepa.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.prokarma.pkmst.controller;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.prokarma.pkmst.model.Category;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.http.ResponseEntity;
import org.springframework.web.multipart.MultipartFile;

/**
 * API tests for ProductApi
 */
@Ignore
public class ProductApiTest {

    private final ObjectMapper objectMapper = new ObjectMapper();

    private final ProductApi api = new ProductApiController(objectMapper);

    private final String accept = "application/json";

    
    /**
     * Retrieve the product for the specified ASIN and domain.
     *
     * Retrieves the product object for the specified ASIN and domain. If our last update is older than one hour it will be automatically refreshed before delivered to you to ensure you get near to real-time pricing data.  You can request products via either their ASIN (preferred) or via UPC and EAN codes. You can not use both parameters, asin and code, in the same request. Keepa can not track Amazon Fresh and eBooks.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void productTest() throws Exception {
        String key = null;
        Integer domain = null;
        String asin = null;
        String code = null;
    ResponseEntity<List<Category>> response = api.product(key, domain, asin, code , accept);

        // TODO: test validations
    }
    
}
