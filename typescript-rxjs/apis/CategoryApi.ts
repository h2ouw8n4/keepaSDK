// tslint:disable
/**
 * Keepa API
 * The Keepa API offers numerous endpoints.  Every request requires your API access key as a parameter. You can find and change your key in the keepa portal. All requests must be issued as a HTTPS GET and accept gzip encoding. If possible, use a Keep-Alive connection.  Multiple requests can be made in parallel to increase throughput.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@keepa.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Observable } from 'rxjs';
import { BaseAPI, RequiredError, HttpHeaders, HttpQuery, COLLECTION_FORMATS } from '../runtime';
import {
    Category,
} from '../models';

export interface CategoryRequest {
    key: string;
    domain: CategoryDomainEnum;
    category: number;
    parents: CategoryParentsEnum;
}

/**
 * no description
 */
export class CategoryApi extends BaseAPI {

    /**
     * Retrieve category objects using their node ids and (optional) their parent tree.
     * Returns Amazon category information from Keepa API.
     */
    categoryRaw(requestParameters: CategoryRequest): Observable<Array<Category>> {
        if (requestParameters.key === null || requestParameters.key === undefined) {
            throw new RequiredError('key','Required parameter requestParameters.key was null or undefined when calling category.');
        }

        if (requestParameters.domain === null || requestParameters.domain === undefined) {
            throw new RequiredError('domain','Required parameter requestParameters.domain was null or undefined when calling category.');
        }

        if (requestParameters.category === null || requestParameters.category === undefined) {
            throw new RequiredError('category','Required parameter requestParameters.category was null or undefined when calling category.');
        }

        if (requestParameters.parents === null || requestParameters.parents === undefined) {
            throw new RequiredError('parents','Required parameter requestParameters.parents was null or undefined when calling category.');
        }

        const queryParameters: HttpQuery = {};

        if (requestParameters.key !== undefined && requestParameters.key !== null) {
            queryParameters['key'] = requestParameters.key;
        }

        if (requestParameters.domain !== undefined && requestParameters.domain !== null) {
            queryParameters['domain'] = requestParameters.domain;
        }

        if (requestParameters.category !== undefined && requestParameters.category !== null) {
            queryParameters['category'] = requestParameters.category;
        }

        if (requestParameters.parents !== undefined && requestParameters.parents !== null) {
            queryParameters['parents'] = requestParameters.parents;
        }

        const headerParameters: HttpHeaders = {};

        return this.request<Array<Category>>({
            path: `/category`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });
    }

    /**
     * Retrieve category objects using their node ids and (optional) their parent tree.
     * Returns Amazon category information from Keepa API.
     */
    category(requestParameters: CategoryRequest): Observable<Array<Category>> {
        return this.categoryRaw(requestParameters);
    }

}

/**
    * @export
    * @enum {string}
    */
export enum CategoryDomainEnum {
    NUMBER_1 = 1,
    NUMBER_2 = 2,
    NUMBER_3 = 3,
    NUMBER_4 = 4,
    NUMBER_5 = 5,
    NUMBER_6 = 6,
    NUMBER_7 = 7,
    NUMBER_8 = 8,
    NUMBER_9 = 9,
    NUMBER_10 = 10,
    NUMBER_11 = 11,
    NUMBER_12 = 12,
    NUMBER_13 = 13
}
/**
    * @export
    * @enum {string}
    */
export enum CategoryParentsEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
