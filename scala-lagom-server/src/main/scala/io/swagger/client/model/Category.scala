/**
 * Keepa API
 * The Keepa API offers numerous endpoints.  Every request requires your API access key as a parameter. You can find and change your key in the keepa portal. All requests must be issued as a HTTPS GET and accept gzip encoding. If possible, use a Keep-Alive connection.  Multiple requests can be made in parallel to increase throughput.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@keepa.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.swagger.client.model
import play.api.libs.json._

case class Category (
                  domainId:  Option[CategoryDomainIdEnum.CategoryDomainIdEnum],
            /* The category node id used by Amazon. Represents the identifier of the category. Also part of the Product object’s categories and rootCategory fields. Always a positive Long value. Note - The id 9223372036854775807 (max signed long value) denotes a blank category with the name “?”. We use this in cases where a product is listed in no or non-existent categories. */
                  catId: Int,
            /* The name of the category. */
                  name: String,
            /* List of all sub categories. null or [] (empty array) if the category has no sub categories. */
                  children: Seq[Int],
            /* The parent category’s Id. Always a positive Long value. If it is 0 the category is a root category and has no parent category. */
                  parent: Int,
            /* The highest (root category) sales rank we have observed of a product that is listed in this category. Note- Estimate, as the value is from the Keepa product database and not retrieved from Amazon. */
                  highestRank: Int,
            /* Number of products that are listed in this category. Note- Estimate, as the value is from the Keepa product database and not retrieved from Amazon. */
                  productCount: Int
)

object Category {
implicit val format: Format[Category] = Json.format
}

object CategoryDomainIdEnum extends Enumeration {
  val   1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 = Value
  type CategoryDomainIdEnum = Value
  implicit val format: Format[Value] = Format(Reads.enumNameReads(this), Writes.enumNameWrites[CategoryDomainIdEnum.type])
}
