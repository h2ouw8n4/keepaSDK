# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule KeepaAPI.Api.Category do
  @moduledoc """
  API calls for all endpoints tagged `Category`.
  """

  alias KeepaAPI.Connection
  import KeepaAPI.RequestBuilder


  @doc """
  Returns Amazon category information from Keepa API.
  Retrieve category objects using their node ids and (optional) their parent tree.

  ## Parameters

  - connection (KeepaAPI.Connection): Connection to server
  - key (String.t): Your private API key.
  - domain (integer()): Integer value for the Amazon locale you want to access. (1-com, 2-co.uk, 3-de, 4-fr, 5-co.jp, 6-ca, 7-cn, 8-it, 9-es, 10-in, 11-com.mx, 12-com.br, 13-com.au)
  - category (integer()): The category node id of the category you want to request. For batch requests a comma separated list of ids (up to 10, the token cost stays the same). Alternatively you can specify the value 0, which will retrieve a list of all root categories.
  - parents (integer()): Whether or not to include the category tree for each category. (1 &#x3D; include, 0 &#x3D; do not include.)
  - opts (KeywordList): [optional] Optional parameters
  ## Returns

  {:ok, [%Category{}, ...]} on success
  {:error, info} on failure
  """
  @spec category(Tesla.Env.client, String.t, integer(), integer(), integer(), keyword()) :: {:ok, list(KeepaAPI.Model.Category.t)} | {:error, Tesla.Env.t}
  def category(connection, key, domain, category, parents, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/category")
    |> add_param(:query, :"key", key)
    |> add_param(:query, :"domain", domain)
    |> add_param(:query, :"category", category)
    |> add_param(:query, :"parents", parents)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode([%KeepaAPI.Model.Category{}])
  end
end
