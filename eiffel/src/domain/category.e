note
 description:"[
		Keepa API
 		The Keepa API offers numerous endpoints.  Every request requires your API access key as a parameter. You can find and change your key in the keepa portal. All requests must be issued as a HTTPS GET and accept gzip encoding. If possible, use a Keep-Alive connection.  Multiple requests can be made in parallel to increase throughput.
  		OpenAPI spec version: 1.0.0
 	    Contact: info@keepa.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class CATEGORY 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    domain_id: INTEGER_32 
      -- Integer value for the Amazon locale you want to access. (1-com, 2-co.uk, 3-de, 4-fr, 5-co.jp, 6-ca, 7-cn, 8-it, 9-es, 10-in, 11-com.mx, 12-com.br, 13-com.au)
    cat_id: INTEGER_32 
      -- The category node id used by Amazon. Represents the identifier of the category. Also part of the Product object’s categories and rootCategory fields. Always a positive Long value. Note - The id 9223372036854775807 (max signed long value) denotes a blank category with the name “?”. We use this in cases where a product is listed in no or non-existent categories.
    name: detachable STRING_32 
      -- The name of the category.
    children: LIST [INTEGER_32] 
      -- List of all sub categories. null or [] (empty array) if the category has no sub categories.
    parent: INTEGER_32 
      -- The parent category’s Id. Always a positive Long value. If it is 0 the category is a root category and has no parent category.
    highest_rank: INTEGER_32 
      -- The highest (root category) sales rank we have observed of a product that is listed in this category. Note- Estimate, as the value is from the Keepa product database and not retrieved from Amazon.
    product_count: INTEGER_32 
      -- Number of products that are listed in this category. Note- Estimate, as the value is from the Keepa product database and not retrieved from Amazon.

feature -- Change Element  
 
    set_domain_id (a_name: like domain_id)
        -- Set 'domain_id' with 'a_name'.
      do
        domain_id := a_name
      ensure
        domain_id_set: domain_id = a_name		
      end

    set_cat_id (a_name: like cat_id)
        -- Set 'cat_id' with 'a_name'.
      do
        cat_id := a_name
      ensure
        cat_id_set: cat_id = a_name		
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name		
      end

    set_children (a_name: like children)
        -- Set 'children' with 'a_name'.
      do
        children := a_name
      ensure
        children_set: children = a_name		
      end

    set_parent (a_name: like parent)
        -- Set 'parent' with 'a_name'.
      do
        parent := a_name
      ensure
        parent_set: parent = a_name		
      end

    set_highest_rank (a_name: like highest_rank)
        -- Set 'highest_rank' with 'a_name'.
      do
        highest_rank := a_name
      ensure
        highest_rank_set: highest_rank = a_name		
      end

    set_product_count (a_name: like product_count)
        -- Set 'product_count' with 'a_name'.
      do
        product_count := a_name
      ensure
        product_count_set: product_count = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass CATEGORY%N")
        if attached domain_id as l_domain_id then
          Result.append ("%Ndomain_id:")
          Result.append (l_domain_id.out)
          Result.append ("%N")    
        end  
        if attached cat_id as l_cat_id then
          Result.append ("%Ncat_id:")
          Result.append (l_cat_id.out)
          Result.append ("%N")    
        end  
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")    
        end  
        if attached children as l_children then
          across l_children as ic loop
            Result.append ("%N children:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end 
        if attached parent as l_parent then
          Result.append ("%Nparent:")
          Result.append (l_parent.out)
          Result.append ("%N")    
        end  
        if attached highest_rank as l_highest_rank then
          Result.append ("%Nhighest_rank:")
          Result.append (l_highest_rank.out)
          Result.append ("%N")    
        end  
        if attached product_count as l_product_count then
          Result.append ("%Nproduct_count:")
          Result.append (l_product_count.out)
          Result.append ("%N")    
        end  
      end
end


