=begin
#Keepa API

#The Keepa API offers numerous endpoints.  Every request requires your API access key as a parameter. You can find and change your key in the keepa portal. All requests must be issued as a HTTPS GET and accept gzip encoding. If possible, use a Keep-Alive connection.  Multiple requests can be made in parallel to increase throughput.

OpenAPI spec version: 1.0.0
Contact: info@keepa.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.0.0-beta2

=end

require 'uri'

module OpenapiClient
  class CategoryApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Returns Amazon category information from Keepa API.
    # Retrieve category objects using their node ids and (optional) their parent tree.
    # @param key Your private API key.
    # @param domain Integer value for the Amazon locale you want to access. (1-com, 2-co.uk, 3-de, 4-fr, 5-co.jp, 6-ca, 7-cn, 8-it, 9-es, 10-in, 11-com.mx, 12-com.br, 13-com.au)
    # @param category The category node id of the category you want to request. For batch requests a comma separated list of ids (up to 10, the token cost stays the same). Alternatively you can specify the value 0, which will retrieve a list of all root categories.
    # @param parents Whether or not to include the category tree for each category. (1 &#x3D; include, 0 &#x3D; do not include.)
    # @param [Hash] opts the optional parameters
    # @return [Array<Category>]
    def category(key, domain, category, parents, opts = {})
      data, _status_code, _headers = category_with_http_info(key, domain, category, parents, opts)
      data
    end

    # Returns Amazon category information from Keepa API.
    # Retrieve category objects using their node ids and (optional) their parent tree.
    # @param key Your private API key.
    # @param domain Integer value for the Amazon locale you want to access. (1-com, 2-co.uk, 3-de, 4-fr, 5-co.jp, 6-ca, 7-cn, 8-it, 9-es, 10-in, 11-com.mx, 12-com.br, 13-com.au)
    # @param category The category node id of the category you want to request. For batch requests a comma separated list of ids (up to 10, the token cost stays the same). Alternatively you can specify the value 0, which will retrieve a list of all root categories.
    # @param parents Whether or not to include the category tree for each category. (1 &#x3D; include, 0 &#x3D; do not include.)
    # @param [Hash] opts the optional parameters
    # @return [Array<(Array<Category>, Fixnum, Hash)>] Array<Category> data, response status code and response headers
    def category_with_http_info(key, domain, category, parents, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CategoryApi.category ...'
      end
      # verify the required parameter 'key' is set
      if @api_client.config.client_side_validation && key.nil?
        fail ArgumentError, "Missing the required parameter 'key' when calling CategoryApi.category"
      end
      # verify the required parameter 'domain' is set
      if @api_client.config.client_side_validation && domain.nil?
        fail ArgumentError, "Missing the required parameter 'domain' when calling CategoryApi.category"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13'].include?(domain)
        fail ArgumentError, "invalid value for 'domain', must be one of 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13"
      end
      # verify the required parameter 'category' is set
      if @api_client.config.client_side_validation && category.nil?
        fail ArgumentError, "Missing the required parameter 'category' when calling CategoryApi.category"
      end
      # verify the required parameter 'parents' is set
      if @api_client.config.client_side_validation && parents.nil?
        fail ArgumentError, "Missing the required parameter 'parents' when calling CategoryApi.category"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['0', '1'].include?(parents)
        fail ArgumentError, "invalid value for 'parents', must be one of 0, 1"
      end
      # resource path
      local_var_path = '/category'

      # query parameters
      query_params = {}
      query_params[:'key'] = key
      query_params[:'domain'] = domain
      query_params[:'category'] = category
      query_params[:'parents'] = parents

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Array<Category>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CategoryApi#category\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

  end
end
