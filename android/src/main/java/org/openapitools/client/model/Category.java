/**
 * Keepa API
 * The Keepa API offers numerous endpoints.  Every request requires your API access key as a parameter. You can find and change your key in the keepa portal. All requests must be issued as a HTTPS GET and accept gzip encoding. If possible, use a Keep-Alive connection.  Multiple requests can be made in parallel to increase throughput.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@keepa.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Category {
  
  public enum DomainIdEnum {
     1,  2,  3,  4,  5,  6,  7,  8,  9,  10,  11,  12,  13, 
  };
  @SerializedName("domainId")
  private DomainIdEnum domainId = null;
  @SerializedName("catId")
  private Integer catId = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("children")
  private List<Integer> children = null;
  @SerializedName("parent")
  private Integer parent = null;
  @SerializedName("highestRank")
  private Integer highestRank = null;
  @SerializedName("productCount")
  private Integer productCount = null;

  /**
   * Integer value for the Amazon locale you want to access. (1-com, 2-co.uk, 3-de, 4-fr, 5-co.jp, 6-ca, 7-cn, 8-it, 9-es, 10-in, 11-com.mx, 12-com.br, 13-com.au)
   **/
  @ApiModelProperty(required = true, value = "Integer value for the Amazon locale you want to access. (1-com, 2-co.uk, 3-de, 4-fr, 5-co.jp, 6-ca, 7-cn, 8-it, 9-es, 10-in, 11-com.mx, 12-com.br, 13-com.au)")
  public DomainIdEnum getDomainId() {
    return domainId;
  }
  public void setDomainId(DomainIdEnum domainId) {
    this.domainId = domainId;
  }

  /**
   * The category node id used by Amazon. Represents the identifier of the category. Also part of the Product object’s categories and rootCategory fields. Always a positive Long value. Note - The id 9223372036854775807 (max signed long value) denotes a blank category with the name “?”. We use this in cases where a product is listed in no or non-existent categories.
   **/
  @ApiModelProperty(required = true, value = "The category node id used by Amazon. Represents the identifier of the category. Also part of the Product object’s categories and rootCategory fields. Always a positive Long value. Note - The id 9223372036854775807 (max signed long value) denotes a blank category with the name “?”. We use this in cases where a product is listed in no or non-existent categories.")
  public Integer getCatId() {
    return catId;
  }
  public void setCatId(Integer catId) {
    this.catId = catId;
  }

  /**
   * The name of the category.
   **/
  @ApiModelProperty(required = true, value = "The name of the category.")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * List of all sub categories. null or [] (empty array) if the category has no sub categories.
   **/
  @ApiModelProperty(required = true, value = "List of all sub categories. null or [] (empty array) if the category has no sub categories.")
  public List<Integer> getChildren() {
    return children;
  }
  public void setChildren(List<Integer> children) {
    this.children = children;
  }

  /**
   * The parent category’s Id. Always a positive Long value. If it is 0 the category is a root category and has no parent category.
   **/
  @ApiModelProperty(required = true, value = "The parent category’s Id. Always a positive Long value. If it is 0 the category is a root category and has no parent category.")
  public Integer getParent() {
    return parent;
  }
  public void setParent(Integer parent) {
    this.parent = parent;
  }

  /**
   * The highest (root category) sales rank we have observed of a product that is listed in this category. Note- Estimate, as the value is from the Keepa product database and not retrieved from Amazon.
   **/
  @ApiModelProperty(required = true, value = "The highest (root category) sales rank we have observed of a product that is listed in this category. Note- Estimate, as the value is from the Keepa product database and not retrieved from Amazon.")
  public Integer getHighestRank() {
    return highestRank;
  }
  public void setHighestRank(Integer highestRank) {
    this.highestRank = highestRank;
  }

  /**
   * Number of products that are listed in this category. Note- Estimate, as the value is from the Keepa product database and not retrieved from Amazon.
   **/
  @ApiModelProperty(required = true, value = "Number of products that are listed in this category. Note- Estimate, as the value is from the Keepa product database and not retrieved from Amazon.")
  public Integer getProductCount() {
    return productCount;
  }
  public void setProductCount(Integer productCount) {
    this.productCount = productCount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Category category = (Category) o;
    return (this.domainId == null ? category.domainId == null : this.domainId.equals(category.domainId)) &&
        (this.catId == null ? category.catId == null : this.catId.equals(category.catId)) &&
        (this.name == null ? category.name == null : this.name.equals(category.name)) &&
        (this.children == null ? category.children == null : this.children.equals(category.children)) &&
        (this.parent == null ? category.parent == null : this.parent.equals(category.parent)) &&
        (this.highestRank == null ? category.highestRank == null : this.highestRank.equals(category.highestRank)) &&
        (this.productCount == null ? category.productCount == null : this.productCount.equals(category.productCount));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.domainId == null ? 0: this.domainId.hashCode());
    result = 31 * result + (this.catId == null ? 0: this.catId.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.children == null ? 0: this.children.hashCode());
    result = 31 * result + (this.parent == null ? 0: this.parent.hashCode());
    result = 31 * result + (this.highestRank == null ? 0: this.highestRank.hashCode());
    result = 31 * result + (this.productCount == null ? 0: this.productCount.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Category {\n");
    
    sb.append("  domainId: ").append(domainId).append("\n");
    sb.append("  catId: ").append(catId).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  children: ").append(children).append("\n");
    sb.append("  parent: ").append(parent).append("\n");
    sb.append("  highestRank: ").append(highestRank).append("\n");
    sb.append("  productCount: ").append(productCount).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
