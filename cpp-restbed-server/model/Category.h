/**
 * Keepa API
 * The Keepa API offers numerous endpoints.  Every request requires your API access key as a parameter. You can find and change your key in the keepa portal. All requests must be issued as a HTTPS GET and accept gzip encoding. If possible, use a Keep-Alive connection.  Multiple requests can be made in parallel to increase throughput.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@keepa.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.0.0-beta2.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Category.h
 *
 * 
 */

#ifndef Category_H_
#define Category_H_



#include <string>
#include <vector>
#include <memory>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  Category
{
public:
    Category();
    virtual ~Category();
    
    std::string toJsonString();
    void fromJsonString(std::string const& jsonString);

    /////////////////////////////////////////////
    /// Category members
    
    /// <summary>
    /// Integer value for the Amazon locale you want to access. (1-com, 2-co.uk, 3-de, 4-fr, 5-co.jp, 6-ca, 7-cn, 8-it, 9-es, 10-in, 11-com.mx, 12-com.br, 13-com.au)
    /// </summary>
    int32_t getDomainId() const;
    void setDomainId(int32_t value);
    /// <summary>
    /// The category node id used by Amazon. Represents the identifier of the category. Also part of the Product object’s categories and rootCategory fields. Always a positive Long value. Note - The id 9223372036854775807 (max signed long value) denotes a blank category with the name “?”. We use this in cases where a product is listed in no or non-existent categories.
    /// </summary>
    int32_t getCatId() const;
    void setCatId(int32_t value);
    /// <summary>
    /// The name of the category.
    /// </summary>
    std::string getName() const;
    void setName(std::string value);
    /// <summary>
    /// List of all sub categories. null or [] (empty array) if the category has no sub categories.
    /// </summary>
    std::vector<int32_t> getChildren() const;
    void setChildren(std::vector<int32_t> value);
    /// <summary>
    /// The parent category’s Id. Always a positive Long value. If it is 0 the category is a root category and has no parent category.
    /// </summary>
    int32_t getParent() const;
    void setParent(int32_t value);
    /// <summary>
    /// The highest (root category) sales rank we have observed of a product that is listed in this category. Note- Estimate, as the value is from the Keepa product database and not retrieved from Amazon.
    /// </summary>
    int32_t getHighestRank() const;
    void setHighestRank(int32_t value);
    /// <summary>
    /// Number of products that are listed in this category. Note- Estimate, as the value is from the Keepa product database and not retrieved from Amazon.
    /// </summary>
    int32_t getProductCount() const;
    void setProductCount(int32_t value);

protected:
    int32_t m_DomainId;
    int32_t m_CatId;
    std::string m_Name;
    std::vector<int32_t> m_Children;
    int32_t m_Parent;
    int32_t m_HighestRank;
    int32_t m_ProductCount;
};

}
}
}
}

#endif /* Category_H_ */
