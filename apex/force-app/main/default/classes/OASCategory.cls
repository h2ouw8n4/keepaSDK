/*
 * Keepa API
 * The Keepa API offers numerous endpoints.  Every request requires your API access key as a parameter. You can find and change your key in the keepa portal. All requests must be issued as a HTTPS GET and accept gzip encoding. If possible, use a Keep-Alive connection.  Multiple requests can be made in parallel to increase throughput.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@keepa.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * OASCategory
 */
public class OASCategory {
    /**
     * Integer value for the Amazon locale you want to access. (1-com, 2-co.uk, 3-de, 4-fr, 5-co.jp, 6-ca, 7-cn, 8-it, 9-es, 10-in, 11-com.mx, 12-com.br, 13-com.au)
     */
    public enum DomainIdEnum {
        NUMBER_1,
        NUMBER_2,
        NUMBER_3,
        NUMBER_4,
        NUMBER_5,
        NUMBER_6,
        NUMBER_7,
        NUMBER_8,
        NUMBER_9,
        NUMBER_10,
        NUMBER_11,
        NUMBER_12,
        NUMBER_13
    }

    /**
     * Integer value for the Amazon locale you want to access. (1-com, 2-co.uk, 3-de, 4-fr, 5-co.jp, 6-ca, 7-cn, 8-it, 9-es, 10-in, 11-com.mx, 12-com.br, 13-com.au)
     * @return domainId
     */
    public DomainIdEnum domainId { get; set; }

    /**
     * The category node id used by Amazon. Represents the identifier of the category. Also part of the Product object’s categories and rootCategory fields. Always a positive Long value. Note - The id 9223372036854775807 (max signed long value) denotes a blank category with the name “?”. We use this in cases where a product is listed in no or non-existent categories.
     * @return catId
     */
    public Integer catId { get; set; }

    /**
     * The name of the category.
     * @return name
     */
    public String name { get; set; }

    /**
     * List of all sub categories. null or [] (empty array) if the category has no sub categories.
     * @return children
     */
    public List<Integer> children { get; set; }

    /**
     * The parent category’s Id. Always a positive Long value. If it is 0 the category is a root category and has no parent category.
     * @return parent
     */
    public Integer parent { get; set; }

    /**
     * The highest (root category) sales rank we have observed of a product that is listed in this category. Note- Estimate, as the value is from the Keepa product database and not retrieved from Amazon.
     * @return highestRank
     */
    public Integer highestRank { get; set; }

    /**
     * Number of products that are listed in this category. Note- Estimate, as the value is from the Keepa product database and not retrieved from Amazon.
     * @return productCount
     */
    public Integer productCount { get; set; }

    public OASCategory() {
        children = new List<Integer>();
    }

    public static OASCategory getExample() {
        OASCategory category = new OASCategory();
          category.domainId = DomainIdEnum.NUMBER_1;
          category.catId = 281052;
          category.name = 'Digital Cameras';
          category.children = new List<Integer>{0};
          category.parent = 502394;
          category.highestRank = 6549;
          category.productCount = 1522;
        return category;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCategory) {           
            OASCategory category = (OASCategory) obj;
            return this.domainId == category.domainId
                && this.catId == category.catId
                && this.name == category.name
                && this.children == category.children
                && this.parent == category.parent
                && this.highestRank == category.highestRank
                && this.productCount == category.productCount;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (domainId == null ? 0 : System.hashCode(domainId));
        hashCode = (17 * hashCode) + (catId == null ? 0 : System.hashCode(catId));
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (children == null ? 0 : System.hashCode(children));
        hashCode = (17 * hashCode) + (parent == null ? 0 : System.hashCode(parent));
        hashCode = (17 * hashCode) + (highestRank == null ? 0 : System.hashCode(highestRank));
        hashCode = (17 * hashCode) + (productCount == null ? 0 : System.hashCode(productCount));
        return hashCode;
    }
}

