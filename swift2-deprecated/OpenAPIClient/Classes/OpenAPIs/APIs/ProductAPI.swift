//
// ProductAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Alamofire



public class ProductAPI: APIBase {
    /**
     * enum for parameter domain
     */
    public enum Domain_product: String { 
        case Number1 = "1"
        case Number2 = "2"
        case Number3 = "3"
        case Number4 = "4"
        case Number5 = "5"
        case Number6 = "6"
        case Number7 = "7"
        case Number8 = "8"
        case Number9 = "9"
        case Number10 = "10"
        case Number11 = "11"
        case Number12 = "12"
        case Number13 = "13"
    }

    /**
     Retrieve the product for the specified ASIN and domain.
     
     - parameter key: (query) Your private API key. 
     - parameter domain: (query) Integer value for the Amazon locale you want to access. (1-com, 2-co.uk, 3-de, 4-fr, 5-co.jp, 6-ca, 7-cn, 8-it, 9-es, 10-in, 11-com.mx, 12-com.br, 13-com.au) 
     - parameter asin: (query) The ASIN of the product you want to request. For batch requests a comma separated list of ASINs (up to one hundred). (optional)
     - parameter code: (query) The product code of the product you want to request. We currently allow UPC, EAN and ISBN-13 codes. For batch requests a comma separated list of codes (up to one hundred). Multiple ASINs can have the same product code, so requesting a product code can return multiple products. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func product(key key: String, domain: Domain_product, asin: String? = nil, code: String? = nil, completion: ((data: [Category]?, error: ErrorType?) -> Void)) {
        productWithRequestBuilder(key: key, domain: domain, asin: asin, code: code).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Retrieve the product for the specified ASIN and domain.
     - GET /product
     - Retrieves the product object for the specified ASIN and domain. If our last update is older than one hour it will be automatically refreshed before delivered to you to ensure you get near to real-time pricing data.  You can request products via either their ASIN (preferred) or via UPC and EAN codes. You can not use both parameters, asin and code, in the same request. Keepa can not track Amazon Fresh and eBooks.     - examples: [{contentType=application/json, example={
  "catId" : 281052,
  "parent" : 502394,
  "children" : [ 3109924011, 7242008011, 3017941, 2476680011, 330405011, 2476681011, 3109925011 ],
  "highestRank" : 6549,
  "name" : "Digital Cameras",
  "productCount" : 1522,
  "domainId" : 1
}, statusCode=200}]
     - parameter key: (query) Your private API key. 
     - parameter domain: (query) Integer value for the Amazon locale you want to access. (1-com, 2-co.uk, 3-de, 4-fr, 5-co.jp, 6-ca, 7-cn, 8-it, 9-es, 10-in, 11-com.mx, 12-com.br, 13-com.au) 
     - parameter asin: (query) The ASIN of the product you want to request. For batch requests a comma separated list of ASINs (up to one hundred). (optional)
     - parameter code: (query) The product code of the product you want to request. We currently allow UPC, EAN and ISBN-13 codes. For batch requests a comma separated list of codes (up to one hundred). Multiple ASINs can have the same product code, so requesting a product code can return multiple products. (optional)

     - returns: RequestBuilder<[Category]> 
     */
    public class func productWithRequestBuilder(key key: String, domain: Domain_product, asin: String? = nil, code: String? = nil) -> RequestBuilder<[Category]> {
        let path = "/product"
        let URLString = OpenAPIClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "key": key,
            "domain": domain.encodeToJSON().rawValue,
            "asin": asin,
            "code": code
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[Category]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
